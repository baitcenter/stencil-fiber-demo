/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface FiberDemo {
      'elapsed': number;
    }
  }

  interface HTMLFiberDemoElement extends StencilComponents.FiberDemo, HTMLStencilElement {}

  var HTMLFiberDemoElement: {
    prototype: HTMLFiberDemoElement;
    new (): HTMLFiberDemoElement;
  };
  interface HTMLElementTagNameMap {
    'fiber-demo': HTMLFiberDemoElement;
  }
  interface ElementTagNameMap {
    'fiber-demo': HTMLFiberDemoElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'fiber-demo': JSXElements.FiberDemoAttributes;
    }
  }
  namespace JSXElements {
    export interface FiberDemoAttributes extends HTMLAttributes {
      'elapsed'?: number;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface FiberDot {
      'size': number;
      'text': string;
      'x': number;
      'y': number;
    }
  }

  interface HTMLFiberDotElement extends StencilComponents.FiberDot, HTMLStencilElement {}

  var HTMLFiberDotElement: {
    prototype: HTMLFiberDotElement;
    new (): HTMLFiberDotElement;
  };
  interface HTMLElementTagNameMap {
    'fiber-dot': HTMLFiberDotElement;
  }
  interface ElementTagNameMap {
    'fiber-dot': HTMLFiberDotElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'fiber-dot': JSXElements.FiberDotAttributes;
    }
  }
  namespace JSXElements {
    export interface FiberDotAttributes extends HTMLAttributes {
      'size'?: number;
      'text'?: string;
      'x'?: number;
      'y'?: number;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface FiberTriangle {
      's': number;
      'seconds': number;
      'x': number;
      'y': number;
    }
  }

  interface HTMLFiberTriangleElement extends StencilComponents.FiberTriangle, HTMLStencilElement {}

  var HTMLFiberTriangleElement: {
    prototype: HTMLFiberTriangleElement;
    new (): HTMLFiberTriangleElement;
  };
  interface HTMLElementTagNameMap {
    'fiber-triangle': HTMLFiberTriangleElement;
  }
  interface ElementTagNameMap {
    'fiber-triangle': HTMLFiberTriangleElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'fiber-triangle': JSXElements.FiberTriangleAttributes;
    }
  }
  namespace JSXElements {
    export interface FiberTriangleAttributes extends HTMLAttributes {
      's'?: number;
      'seconds'?: number;
      'x'?: number;
      'y'?: number;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
